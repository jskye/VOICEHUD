///*
//*  This file is part of OpenDS (Open Source Driving Simulator).
//*  Copyright (C) 2015 Julius Sky
//*
//*  OpenDS is free software: you can redistribute it and/or modify
//*  it under the terms of the GNU General Public License as published by
//*  the Free Software Foundation, either version 3 of the License, or
//*  (at your option) any later version.
//*
//*  OpenDS is distributed in the hope that it will be useful,
//*  but WITHOUT ANY WARRANTY; without even the implied warranty of
//*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//*  GNU General Public License for more details.
//*
//*  You should have received a copy of the GNU General Public License
//*  along with OpenDS. If not, see <http://www.gnu.org/licenses/>.
//*/
//
package julius.sky.voicehud.core.hud;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;

import org.lwjgl.LWJGLException;
import org.lwjgl.opengl.Display;
import org.lwjgl.opengl.DisplayMode;

import com.jme3.app.SimpleApplication;
import com.jme3.asset.AssetManager;
import com.jme3.asset.plugins.FileLocator;
import com.jme3.system.AppSettings;

import de.lessvoid.nifty.Nifty;
import de.lessvoid.nifty.NiftyEventSubscriber;
import de.lessvoid.nifty.controls.CheckBox;
import de.lessvoid.nifty.controls.CheckBoxStateChangedEvent;
import de.lessvoid.nifty.controls.DropDown;
import de.lessvoid.nifty.controls.DropDownSelectionChangedEvent;
import de.lessvoid.nifty.elements.Element;
import de.lessvoid.nifty.elements.render.TextRenderer;
import de.lessvoid.nifty.screen.Screen;
import de.lessvoid.nifty.screen.ScreenController;
//import eu.opends.basics.SimulationBasics;
//import eu.opends.input.KeyBindingEntry;
//import eu.opends.main.Simulator;
//import eu.opends.niftyGui.dropDown.ColorDepthDropDownModel;
//import eu.opends.niftyGui.dropDown.ColorDepthDropDownViewConverter;
//import eu.opends.niftyGui.dropDown.FrequencyDropDownModel;
//import eu.opends.niftyGui.dropDown.FrequencyDropDownViewConverter;
//import eu.opends.niftyGui.dropDown.ResolutionDropDownModel;
//import eu.opends.niftyGui.dropDown.ResolutionDropDownViewConverter;
//import eu.opends.niftyGui.dropDown.SamplesDropDownModel;
//import eu.opends.niftyGui.dropDown.SamplesDropDownViewConverter;
//import eu.opends.tools.PanelCenter;


/**
 * This class handles display and user interaction with the key mapping 
 * and graphic settings window generated by nifty-gui.
 * 
 * @author Rafael Math
 */
public class HUDGUIController extends SimpleApplication implements ScreenController 
{
	
	
//	private SimulationBasics sim;
	private Nifty nifty;

	private HUDGUIState hudGUI;
	private Screen screen;
//	private DropDown<ResolutionDropDownModel> resolutionDropDown;
//	private DropDown<FrequencyDropDownModel> frequencyDropDown;
//	private DropDown<ColorDepthDropDownModel> colorDepthDropDown;
//	private DropDown<SamplesDropDownModel> samplesDropDown;
//	private CheckBox fullScreenCheckBox;
//	private CheckBox vSyncCheckBox;
//	private List<DisplayMode> availableDisplayModes = new ArrayList<DisplayMode>();
//	private ResolutionDropDownModel lastResolutionDropDownSelection;
	
	
	/**
	 * Creates a new controller instance for nifty-gui.
	 */

	public HUDGUIController(HUDGUIState hudGUI) 
	{
//		this.sim = sim;
		this.hudGUI = hudGUI;
		this.nifty = hudGUI.getNifty();
		this.screen = nifty.getCurrentScreen();
	}

	
//	@Override
	public void bind(Nifty arg0, Screen arg1) 
	{
		
	}

	
	/**
	 * Will be called when GUI is closed.
	 */
//	@Override
	public void onEndScreen() 
	{

	}

	
	/**
	 * Will be called when GUI is started.
	 */
//	@Override
	public void onStartScreen() 
	{

	}


	@Override
	public void simpleInitApp() {
		// TODO Auto-generated method stub
		
	}

	
	
}
